{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\jonaz\\\\jonaz-tutorial\\\\04-steps\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst messages = [\"Learn React ⚛️\", \"Apply for jobs 💼\", \"Invest your new income 🤑\"];\nexport default function App() {\n  _s();\n  // const step = 1;\n  const [step, setStep] = useState(1);\n  // why always we use const not let and update by the function i.e step = step + 1;\n\n  // const [test] = useState({name:\"Welde\"})\n  const [test, setTest] = useState({\n    name: \"Welde\"\n  });\n  function handlePrevious() {\n    if (step > 1) setStep(step - 1);\n  }\n  function handleNext() {\n    if (step < 3) setStep(step + 1);\n    // updating the name;\n\n    // bad practice. \n    //test.name = \"Fred\";\n    // recommended.\n    setTest({\n      name: \"Fred\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"steps\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numbers\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: step >= 1 ? \"active\" : \"\",\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: step >= 2 ? \"active\" : \"\",\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: step >= 3 ? \"active\" : \"\",\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: [\"Step \", step, \":\", messages[step - 1], test.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"#7950f2\",\n          color: \"#fff\"\n        },\n        onClick: handlePrevious,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"#7950f2\",\n          color: \"#fff\"\n        },\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }, this);\n}\n_s(App, \"EdLc389rxftPGc/2eDm+zz9P+T8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","messages","App","_s","step","setStep","test","setTest","name","handlePrevious","handleNext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/jonaz/jonaz-tutorial/04-steps/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst messages = [\n  \"Learn React ⚛️\",\n  \"Apply for jobs 💼\",\n  \"Invest your new income 🤑\",\n];\n \n\nexport default function App(){\n  // const step = 1;\n  const [step , setStep] = useState(1) \n  // why always we use const not let and update by the function i.e step = step + 1;\n\n // const [test] = useState({name:\"Welde\"})\n const [test , setTest] = useState({name:\"Welde\"})\n   function  handlePrevious() { \n       if(step > 1) setStep(step - 1); \n   }  \n   function  handleNext() { \n    if(step < 3) setStep(step +1);\n    // updating the name;\n  \n    // bad practice. \n    //test.name = \"Fred\";\n    // recommended.\n    setTest({name:\"Fred\"})\n}\n  return (\n          <div className=\"steps\">\n              <div className=\"numbers\"> \n                {/* <div className={`${step >= 1 ? \"active\":\"\"}`}>1</div>\n                <div className={`${step >= 2 ? \"active\":\"\"}`}>2</div>\n                <div className={`${step >= 3 ? \"active\":\"\"}`}>3</div> */}\n\n                 {/* OR */}\n                <div className={step >= 1 ? \"active\":\"\"}>1</div>\n                <div className={step >= 2 ? \"active\":\"\"}>2</div>\n                <div className={step >= 3 ? \"active\":\"\"}>3</div>\n\n\n              </div> \n\n              <p className=\"message\">Step {step}:{messages[step - 1]}\n                {test.name}\n                </p> \n              \n              <div className=\"buttons\"> \n                <button style={{backgroundColor:\"#7950f2\" , color:\"#fff\"}} onClick={handlePrevious}>Previous</button>\n                <button style={{backgroundColor:\"#7950f2\" , color:\"#fff\"}} onClick={handleNext}>Next</button>\n              </div>\n         </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}